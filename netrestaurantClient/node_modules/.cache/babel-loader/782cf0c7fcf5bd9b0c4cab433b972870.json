{"ast":null,"code":"import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\nconst {\n  kakao\n} = window; // 공통사용 로직 이기 떄문에 모듈로 뻈습니다\n//geoloctionApi\n//https://apis.map.kakao.com/web/sample/geolocationMarker/\n\nexport function displayMarker(locPosition, message, map) {\n  // 마커를 생성합니다\n  var marker = new kakao.maps.Marker({\n    map: map,\n    position: locPosition\n  });\n  var iwContent = message,\n      // 인포윈도우에 표시할 내용\n  iwRemoveable = true; // 인포윈도우를 생성합니다\n\n  var infowindow = new kakao.maps.InfoWindow({\n    content: iwContent,\n    removable: iwRemoveable\n  }); // 인포윈도우를 마커위에 표시합니다 \n\n  infowindow.open(map, marker); // 지도 중심좌표를 접속위치로 변경합니다\n\n  map.setCenter(locPosition);\n}\nexport function kakaoGeolocationApi(map) {\n  if (navigator.geolocation) {\n    console.log('isNavigator'); // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var lat = position.coords.latitude,\n          // 위도\n      lon = position.coords.longitude; // 경도\n\n      var locPosition = new kakao.maps.LatLng(lat, lon),\n          // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      message = '<div style=\"padding:5px;\">현재위치</div>'; // 인포윈도우에 표시될 내용입니다\n      // 마커와 인포윈도우를 표시합니다\n\n      displayMarker(locPosition, message, map);\n      return true;\n    });\n  } else {\n    // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n    console.log('!isNavigator');\n    var locPosition = new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),\n        message = 'geolocation을 사용할수 없어요..';\n    displayMarker(locPosition, message);\n    return false;\n  }\n}\nexport default function kakaoMapApi(category) {\n  // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n  const placeOverlay = new kakao.maps.CustomOverlay({\n    zIndex: 1\n  });\n  console.log('placeOverlay:', placeOverlay);\n  let mapContainer = document.getElementById(KAKO_DOCUMENT_ID),\n      // 지도를 표시할 div \n  mapOption = {\n    center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),\n    // 지도의 중심좌표\n    level: 10 // 지도의 확대 레벨\n\n  };\n  console.log('mapContainer:', mapContainer); // 지도를 생성합니다    \n\n  const map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n  const ps = new kakao.maps.services.Places(map);\n  console.log('ps:', ps);\n  kakaoGeolocationApi(map); // 카테고리로 은행을 검색합니다\n\n  ps.categorySearch(category, placesSearchCB, {\n    useMapBounds: true\n  }); // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      for (let i = 0; i < data.length; i++) {\n        displayMarker(data[i], map);\n      }\n    }\n  } // 지도에 마커를 표시하는 함수입니다\n\n\n  function displayMarker(place) {\n    // 마커를 생성하고 지도에 표시합니다\n    const marker = new kakao.maps.Marker({\n      map: map,\n      position: new kakao.maps.LatLng(place.y, place.x)\n    }); // 마커에 클릭이벤트를 등록합니다\n\n    kakao.maps.event.addListener(marker, 'click', function () {\n      console.log(place); // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n\n      placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n      placeOverlay.open(map, marker);\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/roberto/Desktop/스터디/Restaurant/netrestaurantClient/src/util/kakaoMapApi.js"],"names":["CurrentLocation","KAKO_DOCUMENT_ID","NET_LOCATION","kakao","window","displayMarker","locPosition","message","map","marker","maps","Marker","position","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","open","setCenter","kakaoGeolocationApi","navigator","geolocation","console","log","getCurrentPosition","lat","coords","latitude","lon","longitude","LatLng","let","kakaoMapApi","category","placeOverlay","CustomOverlay","zIndex","mapContainer","document","getElementById","mapOption","center","level","Map","ps","services","Places","categorySearch","placesSearchCB","useMapBounds","data","status","pagination","Status","OK","i","length","place","y","x","event","addListener","setContent","place_name"],"mappings":"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","sourcesContent":["import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\r\n\r\nconst { kakao } = window;\r\n\r\n// 공통사용 로직 이기 떄문에 모듈로 뻈습니다\r\n\r\n//geoloctionApi\r\n//https://apis.map.kakao.com/web/sample/geolocationMarker/\r\n\r\nexport function displayMarker(locPosition, message,map) {\r\n\r\n    // 마커를 생성합니다\r\n    var marker = new kakao.maps.Marker({  \r\n        map: map, \r\n        position: locPosition\r\n    }); \r\n    \r\n    var iwContent = message, // 인포윈도우에 표시할 내용\r\n        iwRemoveable = true;\r\n\r\n    // 인포윈도우를 생성합니다\r\n    var infowindow = new kakao.maps.InfoWindow({\r\n        content : iwContent,\r\n        removable : iwRemoveable\r\n    });\r\n    \r\n    // 인포윈도우를 마커위에 표시합니다 \r\n    infowindow.open(map, marker);\r\n    \r\n    // 지도 중심좌표를 접속위치로 변경합니다\r\n    map.setCenter(locPosition);      \r\n}   \r\n\r\nexport function kakaoGeolocationApi(map){\r\n    \r\n    if (navigator.geolocation) {\r\n    console.log('isNavigator');\r\n\r\n        // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            \r\n            var lat = position.coords.latitude, // 위도\r\n                lon = position.coords.longitude; // 경도\r\n            \r\n            var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n                message = '<div style=\"padding:5px;\">현재위치</div>'; // 인포윈도우에 표시될 내용입니다\r\n            \r\n            // 마커와 인포윈도우를 표시합니다\r\n            displayMarker(locPosition, message,map);\r\n                return true \r\n          });\r\n\r\n        \r\n    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n        console.log('!isNavigator');\r\n\r\n        var locPosition = new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),    \r\n            message = 'geolocation을 사용할수 없어요..'\r\n            \r\n        displayMarker(locPosition, message);\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport default function kakaoMapApi(category) {\r\n// 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\r\n    const placeOverlay = new kakao.maps.CustomOverlay({zIndex:1});\r\n\r\n    console.log('placeOverlay:',placeOverlay)\r\n\r\n    let mapContainer = document.getElementById(KAKO_DOCUMENT_ID), // 지도를 표시할 div \r\n    mapOption = {\r\n        center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon), // 지도의 중심좌표\r\n        level: 10 // 지도의 확대 레벨\r\n    };  \r\n\r\n    console.log('mapContainer:',mapContainer)\r\n\r\n    // 지도를 생성합니다    \r\n    const map = new kakao.maps.Map(mapContainer, mapOption); \r\n\r\n    // 장소 검색 객체를 생성합니다\r\n    const ps = new kakao.maps.services.Places(map); \r\n    \r\n    console.log('ps:',ps)\r\n\r\n    kakaoGeolocationApi(map)\r\n\r\n     // 카테고리로 은행을 검색합니다\r\n     ps.categorySearch(category, placesSearchCB, {useMapBounds:true}); \r\n\r\n       // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n    function placesSearchCB (data, status, pagination) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            for (let i=0; i<data.length; i++) {\r\n                displayMarker(data[i],map);    \r\n            }       \r\n        }\r\n    }\r\n\r\n        // 지도에 마커를 표시하는 함수입니다\r\n        function displayMarker(place) {\r\n\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            const marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n    \r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                console.log(place)\r\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n                placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                placeOverlay.open(map, marker);\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}