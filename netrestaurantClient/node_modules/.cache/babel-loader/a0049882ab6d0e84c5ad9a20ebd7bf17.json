{"ast":null,"code":"export default class httpRequest {\n  constructor(baseURL, authController) {\n    this.baseURL = baseURL;\n    this.authController = authController;\n  } //http 요청 설정\n\n\n  async fetch(url, options) {\n    console.log('http 요청정보 url,options', url, options);\n    const res = await fetch(`${this.baseURL}${url}`, { ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      }\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      console.error(error);\n    }\n\n    console.log('data:', data);\n    return data;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/roberto/Desktop/스터디/Restaurant/netrestaurantClient/src/util/http.js"],"names":["httpRequest","constructor","baseURL","authController","fetch","url","options","console","log","res","headers","data","json","error"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAiB;AAC5BC,EAAAA,WAAW,CAACC,OAAD,EAAWC,cAAX,EAA0B;AACjC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACH,GAJ2B,CAKhC;;;AACW,QAALC,KAAK,CAACC,GAAD,EAAMC,OAAN,EAAe;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCH,GAArC,EAAyCC,OAAzC;AACA,UAAMG,GAAG,GAAG,MAAML,KAAK,CAAE,GAAE,KAAKF,OAAQ,GAAEG,GAAI,EAAvB,EAA0B,EAC/C,GAAGC,OAD4C;AAE/CI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,WAAGJ,OAAO,CAACI;AAFJ;AAFsC,KAA1B,CAAvB;AAOA,QAAIC,IAAJ;;AACA,QAAI;AACFA,MAAAA,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAb;AACD,KAFD,CAEE,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACD;;AACDN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,IAApB;AACA,WAAOA,IAAP;AACD;;AAvB6B","sourcesContent":["export default class httpRequest{\r\n    constructor(baseURL , authController){\r\n        this.baseURL = baseURL;\r\n        this.authController = authController;\r\n    }\r\n//http 요청 설정\r\nasync fetch(url, options) {\r\n    console.log('http 요청정보 url,options', url,options)\r\n    const res = await fetch(`${this.baseURL}${url}`, {\r\n      ...options,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...options.headers,\r\n      },\r\n    });\r\n    let data;\r\n    try {\r\n      data = await res.json();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    console.log('data:',data)\r\n    return data;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}